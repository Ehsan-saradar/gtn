syntax = "proto3";

package gtn.gtn;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "gtn/gtn/params.proto";
import "gtn/gtn/game.proto";
import "gtn/gtn/guess.proto";

option go_package = "gtn/x/gtn/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/gtn/gtn/params";
  
  }
  
  // Queries a list of Game items.
  rpc Game (QueryGetGameRequest) returns (QueryGetGameResponse) {
    option (google.api.http).get = "/gtn/gtn/game/{id}";
  
  }
  rpc GameAll (QueryAllGameRequest) returns (QueryAllGameResponse) {
    option (google.api.http).get = "/gtn/gtn/game";
  
  }
  
  // Queries a list of Guess items.
  rpc GameGuesses (QueryGetGameGuessesRequest) returns (QueryGetGameGuessesResponse) {
    option (google.api.http).get = "/gtn/gtn/guess/{game_id}";
  
  }
  rpc GuessAll (QueryAllGuessRequest) returns (QueryAllGuessResponse) {
    option (google.api.http).get = "/gtn/gtn/guess";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

message QueryGetGameRequest {
  uint64 id = 1;
}

message QueryGetGameResponse {
  Game Game = 1 [(gogoproto.nullable) = false];
}

message QueryAllGameRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllGameResponse {
  repeated Game                                   Games       = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetGameGuessesRequest {
  uint64 game_id = 1;
}

message QueryGetGameGuessesResponse {
  repeated Guess Guesses = 1 [(gogoproto.nullable) = false];
}

message QueryAllGuessRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllGuessResponse {
  repeated Guess                                  Guesses      = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

